name: CI/CD Pipeline - Corelab Task Manager

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18.x'

jobs:
  # Job de teste e qualidade de c√≥digo
  test:
    name: Test & Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check Prettier formatting
        run: npx prettier --check .

      - name: Run tests (quando implementados)
        run: |
          echo "Tests will be implemented in future iterations"
          # npm run test

      - name: Build application
        run: npm run build
        env:
          MONGODB_URI: mongodb://localhost:27017/corelab-tasks-test

  # Job de build para Docker
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            corelab/task-manager:latest
            corelab/task-manager:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Job de deploy (exemplo para Vercel)
  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

  # Job de notifica√ß√£o
  notify:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()

    steps:
      - name: Notify success
        if: ${{ needs.deploy.result == 'success' }}
        run: |
          echo "üöÄ Deployment successful!"
          # Adicionar notifica√ß√£o para Slack, Discord, etc.

      - name: Notify failure
        if: ${{ needs.deploy.result == 'failure' }}
        run: |
          echo "‚ùå Deployment failed!"
          # Adicionar notifica√ß√£o para Slack, Discord, etc.
